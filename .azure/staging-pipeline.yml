# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pr:
  branches:
    include:
    - master
    exclude:
    - release/*

variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm

jobs:
- job: Build
  displayName: Build
  pool:
    vmImage: 'ubuntu-latest'
  workspace:
    clean: all
  steps:

  - checkout: self
    clean: true
    fetchDepth: 1

  - task: qetza.replacetokens.replacetokens-task.replacetokens@3
    displayName: 'Replace tokens in env'
    inputs:
      targetFiles: .env.template
      escapeType: none
      tokenPrefix: '#{'
      tokenSuffix: '}'
      actionOnMissing: fail

  - powershell: |
      mv .env.template .env.production
      cat .env.production
    displayName: 'Rename env file'

  - task: Cache@2
    inputs:
      key: 'npm | "$(Agent.OS)" | package.json'
      restoreKeys: |
         npm | "$(Agent.OS)"
         npm
      path: $(npm_config_cache)
    displayName: Cache npm

  - task: UseNode@1
    inputs:
      version: '13.7.x'

  - task: Npm@1
    displayName: 'npm install'
    inputs:
      verbose: false

  - task: Npm@1
    displayName: 'npm lint'
    inputs:
      command: custom
      verbose: false
      customCommand: run-script lint

  - task: Npm@1
    displayName: 'npm build'
    inputs:
      command: custom
      verbose: false
      customCommand: run-script build

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: 'public'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/public.zip'
      replaceExistingArchive: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'),eq(variables['Build.SourceBranch'], 'refs/heads/release')))
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)

  - task: Bash@3
    displayName: 'Deploy to https://sswpeoplestaging.firebaseapp.com/people/'
    inputs:
      targetType: 'inline'
      script: |
        npm install -g firebase-tools
        rm -rf public/previous-employees
        mkdir firebase && mv public firebase/people
        firebase deploy --token $(FIREBASETOKEN)

  - task: Bash@3
    displayName: 'Check broken links and performance'
    inputs:
      targetType: 'inline'
      script: 'docker container run --rm --cap-add=SYS_ADMIN -v "$(Build.SourcesDirectory)/src:/home/lhci/app/src" sswconsulting/sswauditor --url https://sswpeoplestaging.firebaseapp.com/people/ --lighthouse --token 828ea8af-66c6-4ff5-63c1-9606e3c702d2 --buildId $(Build.BuildNumber)'
