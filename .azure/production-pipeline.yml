# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- release/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm

steps:

- task: qetza.replacetokens.replacetokens-task.replacetokens@3
  displayName: 'Replace tokens in env'
  inputs:
    targetFiles: .env.template
    escapeType: none
    tokenPrefix: '#{'
    tokenSuffix: '}'
    actionOnMissing: fail

- script: |
   mv .env.template .env.production
   cat .env.production
  displayName: 'Rename env file'

- task: Cache@2
  inputs:
    key: 'npm | "$(Agent.OS)" | package.json'
    restoreKeys: |
       npm | "$(Agent.OS)"
       npm
    path: $(npm_config_cache)
  displayName: Cache npm

- task: Npm@1
  displayName: 'npm install'
  inputs:
    verbose: false

- task: Npm@1
  displayName: 'npm build'
  inputs:
    command: custom
    verbose: false
    customCommand: run-script build

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'public'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/public.zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'),startsWith(variables['Build.SourceBranch'], 'refs/heads/release')))
  inputs:
    PathtoPublish: $(Build.ArtifactStagingDirectory)
