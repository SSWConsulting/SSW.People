steps:
  - checkout: self
    clean: true
    fetchDepth: 1

  - task: qetza.replacetokens.replacetokens-task.replacetokens@3
    displayName: 'Replace tokens in env'
    inputs:
      targetFiles: .env.template
      escapeType: none
      tokenPrefix: '#{'
      tokenSuffix: '}'
      actionOnMissing: fail

  - task: Cache@2
    displayName: Cache Gatsby .cache
    condition: and(succeeded(), eq(variables['GATSBY_CACHE'], 'TRUE'))
    inputs:
      key: 'gatsby_cache | "$(Agent.OS)"'
      restoreKeys: |
        gatsby_cache | "$(Agent.OS)"
      path: $(Build.SourcesDirectory)/.cache

  - task: Cache@2
    displayName: Cache Gatsby public
    condition: and(succeeded(), eq(variables['GATSBY_CACHE'], 'TRUE'))
    inputs:
      key: 'gatsby_public | "$(Agent.OS)"'
      restoreKeys: |
        gatsby_public | "$(Agent.OS)"
      path: $(Build.SourcesDirectory)/public

  - task: UseNode@1
    inputs:
      version: '14.15.x'

  - script: yarn install --frozen-lockfile --network-timeout 1000000
    displayName: yarn install

  - script: yarn lint
    displayName: yarn lint

  - powershell: |
      mv .env.template .env.production
      cat .env.production
    displayName: 'Rename env file'

  - script: yarn build
    displayName: yarn build

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: 'public'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/public.zip'
      replaceExistingArchive: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)
