steps:
  - checkout: self
    clean: true
    fetchDepth: 1

  - task: qetza.replacetokens.replacetokens-task.replacetokens@3
    displayName: 'Replace tokens in env'
    inputs:
      targetFiles: .env.template
      escapeType: none
      tokenPrefix: '#{'
      tokenSuffix: '}'
      actionOnMissing: fail

  - powershell: |
      mv .env.template .env.production
      cat .env.production
    displayName: 'Rename env file'

  - task: Cache@2
    inputs:
      key: 'npm | "$(Agent.OS)" | package.json'
      restoreKeys: |
         npm | "$(Agent.OS)"
         npm
      path: $(Pipeline.Workspace)/.npm
    displayName: Cache npm

  - task: UseNode@1
    inputs:
      version: '13.7.x'

  - task: Npm@1
    displayName: 'npm ci'
    inputs:
      command: custom
      verbose: false
      customCommand: ci --prefer-offline --no-audit

  - task: Npm@1
    displayName: 'npm lint'
    inputs:
      command: custom
      verbose: false
      customCommand: run-script lint

  - task: Npm@1
    displayName: 'npm build'
    inputs:
      command: custom
      verbose: false
      customCommand: run-script build

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: 'public'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/public.zip'
      replaceExistingArchive: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)